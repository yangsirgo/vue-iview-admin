JSCounter = {};
JSCounter.NumberCounter = function(a, b) {
	this.container = a;
	this.options = $.extend({
		numberHeight: "30px",
		numberWidth: "14px",
		numberSize: "25px",
		auto: false,
		increase: true,
		step: 1,
		speed: 1000,
		delay: 1000,
		start: 10000,
		pretoken: "",
		comma: true
	}, b || {})
};
JSCounter.NumberCounter.prototype.render = function() {
	if (this.options.start < 0) {
		this.minus = true;
		this._createDiv(-this.options.start)
	} else {
		this.minus = false;
		this._createDiv(this.options.start)
	}
	this.lastNumber = this.options.start;
	if (this.options.auto) {
		this.run()
	}
};
JSCounter.NumberCounter.prototype.run = function() {
	if (this.running) {
		return
	}
	this.running = true;
	this._run()
};
JSCounter.NumberCounter.prototype._run = function() {
	if (this.options.increase) {
		this.setNumber(this.lastNumber + this.options.step)
	} else {
		this.setNumber(this.lastNumber - this.options.step)
	}
	var a = this;
	this.autoCounter = setTimeout(function() {
		a._run()
	}, this.options.delay)
};
JSCounter.NumberCounter.prototype.stop = function() {
	this.running = false;
	clearTimeout(this.autoCounter)
};
JSCounter.NumberCounter.prototype._createDiv = function(c) {
	var k = "";
	if (this.options.pretoken) {
		k += "<div style='position:static;overflow:hidden;float:left;width:" + this.options.numberWidth + ";height:" + this.options.numberHeight + ";font-size:" + this.options.numberSize + ";'>" + this.options.pretoken + "</div>"
	}
	k += "<div id='" + this.container + "-minus' style='position:static;overflow:hidden;float:left;width:" + this.options.numberWidth + ";height:" + this.options.numberHeight + ";font-size:" + this.options.numberSize;
	if (!this.minus) {
		k += ";display:none"
	}
	k += ";'>-</div>";
	var g = this._getPosition(c);
	var h = [];
	var e = 0;
	for (var f = 0; f < c.toString().length; f++) {
		var a = "";
		if (this.options.comma) {
			if (e == 3) {
				var b = "<div style='position:static;overflow:hidden;float:left;width:" + this.options.numberWidth + ";height:" + this.options.numberHeight + ";font-size:" + this.options.numberSize + ";'>,</div>";
				e = 1;
				h.push(b)
			} else {
				e++
			}
		}
		a = "<div style='position:relative;overflow:hidden;float:left;width:" + this.options.numberWidth + ";height:" + this.options.numberHeight + ";font-size:" + this.options.numberSize + ";'><div id='" + this.container + "-number-" + f + "' style='position:relative;bottom:" + g[f] + "px;'>";
		for (var d = 9; d > -2; d--) {
			if (d == -1) {
				a += "<div style='height:" + this.options.numberHeight + ";font-size:" + this.options.numberSize + ";'>.</div>"
			} else {
				a += "<div style='height:" + this.options.numberHeight + ";font-size:" + this.options.numberSize + ";'>" + d + "</div>"
			}
		}
		a += "</div></div>";
		h.push(a)
	}
	k += h.reverse().join("");
	document.getElementById(this.container).innerHTML = k
};
JSCounter.NumberCounter.prototype._getPosition = function(d) {
	var b = d.toString();
	var a = [];
	for (var c = b.length - 1; c > -1; c--) {
		var e = (9 - parseInt(b.charAt(c), 10)) * parseInt(this.options.numberHeight, 10);
		a.push(e)
	}
	return a
};
JSCounter.NumberCounter.prototype.setNumber = function(e) {
	if (typeof e != "number") {
		alert("The input parameter is not a number.");
		return
	}
	var c = document.getElementById(this.container + "-minus");
	var f = e;
	if (e < 0) {
		this.minus = true;
		f = -e;
		c.style.display = ""
	} else {
		this.minus = false;
		c.style.display = "none"
	}
	if (f.toString().length != this.lastNumber.toString().length) {
		var g = "";
		for (var b = 0; b < f.toString().length; b++) {
			if (b == 0) {
				g += "1"
			} else {
				if (this.options.increase) {
					g += "9"
				} else {
					g += "0"
				}
			}
		}
		this._createDiv(parseInt(g, 10));
		this.lastNumber = parseInt(g, 10)
	}
	var a = this._getPosition(f);
	var d = this.lastNumber.toString().length;
	for (var b = 0; b < d; b++) {
		var h = this.container + "-number-" + b;
		if (a[b] || a[b] == 0) {
			$("#" + h).animate({
				bottom: a[b]
			}, this.options.speed)
		} else {
			$("#" + h).animate({
				bottom: 10 * parseInt(this.options.numberHeight, 10)
			}, this.options.speed)
		}
	}
	this.lastNumber = e
};
JSCounter.TimeCounter = function(a, b) {
	this.container = a;
	this.options = $.extend({
		numberHeight: "30px",
		numberWidth: "14px",
		numberSize: "25px",
		auto: false,
		increase: true,
		step: 1,
		speed: 1000,
		delay: 1000,
		initHour: 20,
		initMinute: 59,
		initSecond: 59,
		showZero: true,
		finalFunction: null
	}, b || {})
};
JSCounter.TimeCounter.prototype.render = function() {
	this._initTime(this.options.initHour, this.options.initMinute, this.options.initSecond);
	this._createDiv(this.lastHour, this.lastMinute, this.lastSecond);
	if (this.options.auto) {
		this.run()
	}
};
JSCounter.TimeCounter.prototype._initTime = function(a, c, b) {
	if (a == null || typeof a == "undefined") {
		this.lastHour = null
	} else {
		if (typeof a != "number" || a < 0) {
			this.lastHour = 0
		} else {
			this.lastHour = a
		}
	}
	if (c == null || typeof c == "undefined") {
		if (this.lastHour == null) {
			this.lastMinute = null
		} else {
			this.lastMinute = 0
		}
	} else {
		if (typeof c != "number" || c > 59 || c < 0) {
			this.lastMinute = 0
		} else {
			this.lastMinute = c
		}
	}
	if (typeof b != "number" || b > 59 || b < 0) {
		this.lastSecond = 0
	} else {
		this.lastSecond = b
	}
};
JSCounter.TimeCounter.prototype.run = function() {
	if (this.running) {
		return
	}
	this.running = true;
	this._run()
};
JSCounter.TimeCounter.prototype._run = function() {
	var a = this._getTime();
	if (a == null) {
		this.stop();
		if (typeof this.options.finalFunction == "function") {
			this.options.finalFunction()
		}
		return
	}
	this.setTime(a.hour, a.minute, a.second);
	this.autoCounter = setTimeout(function() {
		othis._run()
	}, this.options.delay)
};
JSCounter.TimeCounter.prototype._getTime = function() {
	var c = {};
	var a = this.lastHour;
	var d = this.lastMinute;
	var b = this.lastSecond;
	if (this.options.increase) {
		b++;
		if (b == 60) {
			b = 0;
			d++
		}
		if (d == 60) {
			d = 0;
			a++
		}
	} else {
		b--;
		if (b == -1) {
			b = 59;
			d--
		}
		if (d == -1) {
			d = 59;
			a--
		}
		if (a < 0) {
			return null
		}
	}
	c.second = b;
	c.minute = d;
	c.hour = a;
	return c
};
JSCounter.TimeCounter.prototype.stop = function() {
	this.running = false;
	clearTimeout(this.autoCounter)
};
JSCounter.TimeCounter.prototype._createDiv = function(c, b, a) {
	var g = "";
	var f = this._getPosition(c);
	this.hourLength = f.length;
	for (var e = 0; e < f.length; e++) {
		g += "<div style='position:relative;overflow:hidden;float:left;width:" + this.options.numberWidth + ";height:" + this.options.numberHeight + ";font-size:" + this.options.numberSize + ";'><div id='" + this.container + "-hour-" + e + "' style='position:relative;bottom:" + f[e] + "px;'>";
		for (var d = 9; d > -1; d--) {
			g += "<div style='height:" + this.options.numberHeight + ";font-size:" + this.options.numberSize + ";'>" + d + "</div>"
		}
		g += "</div></div>"
	}
	if (g) {
		g += "<div style='position:static;overflow:hidden;float:left;width:" + this.options.numberWidth + ";height:" + this.options.numberHeight + ";font-size:" + this.options.numberSize + ";'>:</div>"
	}
	var h = this._getPosition(b);
	for (var e = 0; e < h.length; e++) {
		g += "<div style='position:relative;overflow:hidden;float:left;width:" + this.options.numberWidth + ";height:" + this.options.numberHeight + ";font-size:" + this.options.numberSize + ";'><div id='" + this.container + "-minute-" + e + "' style='position:relative;bottom:" + h[e] + "px;'>";
		for (var d = 9; d > -1; d--) {
			g += "<div style='height:" + this.options.numberHeight + ";font-size:" + this.options.numberSize + ";'>" + d + "</div>"
		}
		g += "</div></div>"
	}
	if (g) {
		g += "<div style='position:static;overflow:hidden;float:left;width:" + this.options.numberWidth + ";height:" + this.options.numberHeight + ";font-size:" + this.options.numberSize + ";'>:</div>"
	}
	var k = this._getPosition(a);
	for (var e = 0; e < k.length; e++) {
		g += "<div style='position:relative;overflow:hidden;float:left;width:" + this.options.numberWidth + ";height:" + this.options.numberHeight + ";font-size:" + this.options.numberSize + ";'><div id='" + this.container + "-second-" + e + "' style='position:relative;bottom:" + k[e] + "px;'>";
		for (var d = 9; d > -1; d--) {
			g += "<div style='height:" + this.options.numberHeight + ";font-size:" + this.options.numberSize + ";'>" + d + "</div>"
		}
		g += "</div></div>"
	}
	document.getElementById(this.container).innerHTML = g
};
JSCounter.TimeCounter.prototype._getPosition = function(d) {
	var a = [];
	if (d == null) {
		return a
	}
	var b = d.toString();
	if (this.options.showZero && b.length < 2) {
		b = "0" + b
	}
	for (var c = 0; c < b.length; c++) {
		var e = (9 - parseInt(b.charAt(c), 10)) * parseInt(this.options.numberHeight, 10);
		a.push(e)
	}
	return a
};
JSCounter.TimeCounter.prototype.setTime = function(g, f, e) {
	if (typeof g != "number" || typeof f != "number" || typeof e != "number") {
		alert("The input parameter is not a number.");
		return
	}
	var c = this.lastHour.toString() + this.lastMinute.toString() + this.lastSecond.toString();
	this._initTime(g, f, e);
	if (!this.options.showZero) {
		var d = this.lastHour.toString() + this.lastMinute.toString() + this.lastSecond.toString();
		if (d.length != c.length) {
			var j = "";
			var a = 1;
			var o = 1;
			for (var k = 0; k < this.lastHour.toString().length; k++) {
				if (k == 0) {
					j += "1"
				} else {
					if (this.options.increase) {
						j += "9"
					} else {
						j += "0"
					}
				}
			}
			j = parseInt(j, 10);
			if (this.lastMinute > 9) {
				a = 10
			}
			if (this.lastSecond > 9) {
				o = 10
			}
			this._createDiv(j, a, o)
		}
	}
	var m = this._getPosition(this.lastHour);
	if (this.hourLength > m.length && this.options.showZero) {
		m = m.reverse();
		var l = 0;
		for (var k = this.hourLength - 1; k > -1; k--) {
			var b = this.container + "-hour-" + k;
			if (m[l]) {
				$("#" + b).animate({
					bottom: m[l]
				}, this.options.speed)
			} else {
				$("#" + b).animate({
					bottom: 9 * parseInt(this.options.numberHeight, 10)
				}, this.options.speed)
			}
			l++
		}
	} else {
		for (var k = 0; k < m.length; k++) {
			var b = this.container + "-hour-" + k;
			$("#" + b).animate({
				bottom: m[k]
			}, this.options.speed)
		}
	}
	var h = this._getPosition(this.lastMinute);
	for (var k = 0; k < h.length; k++) {
		var b = this.container + "-minute-" + k;
		$("#" + b).animate({
			bottom: h[k]
		}, this.options.speed)
	}
	var n = this._getPosition(this.lastSecond);
	for (var k = 0; k < n.length; k++) {
		var b = this.container + "-second-" + k;
		$("#" + b).animate({
			bottom: n[k]
		}, this.options.speed)
	}
};